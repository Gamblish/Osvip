{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/Components/RegistrationFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState, useContext } from 'react';\nimport { Context } from '../Context';\nimport PasswordRules from './PasswordRules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationFormContainer() {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [passwordEqual, setPasswordEqual] = useState(false);\n  const [fcs, setFcs] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Email Не может быть пустым');\n  const [passwordError, setPasswordError] = useState('Пароль Не может быть пустым');\n  const [formValid, setFormValid] = useState(false);\n  const [passwordEqualDirty, setPasswordEqualDirty] = useState(false);\n  useEffect(() => {\n    if (emailError || passwordError || passwordEqual == false) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [emailError, passwordError]);\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n\n      case 'password':\n        setPasswordDirty(true);\n\n      case 'passwordEqual':\n        setPasswordEqualDirty(true);\n    }\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (e.target.value == '') {\n      setEmailError('Email не может быть пустым');\n    } else if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Некорректный Email');\n      setEmailDirty(false);\n    } else {\n      setEmailError('');\n      setEmailDirty(false);\n    }\n  };\n\n  function registerHandler() {\n    store.registration(email, password, fcs);\n    setModalActive('register_confirm');\n  }\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    const re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,64})\");\n\n    if (e.target.value == '') {\n      setPasswordError('Пароль не может быть пустым');\n    } else if (!re.test(String(e.target.value))) {\n      setPasswordError('Ненадежный пароль');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const {\n    store,\n    setModalActive,\n    setAuth,\n    userData\n  } = useContext(Context);\n\n  function clearLoginForm() {\n    setFcs('');\n    setPassword('');\n    setEmail('');\n    setModalActive(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" LoginContainer LoginContainerVisible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginContainer__CloseButton\",\n      onClick: () => clearLoginForm(),\n      children: \"\\u2573\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"LoginContainer__Logo\",\n      width: \"200\",\n      height: \"150\",\n      viewBox: \"0 0 80 40\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M1 17.9343V34.0029H24.2582V31.4657M1 17.9343H24.2582V20.4714M1 17.9343L6.95636 10.5343L8.65818 16.8771L13.48 2.5L16.8836 16.8771L21.1382 10.5343L24.2582 16.8771M24.2582 20.4714H13.48L4.40364 31.4657H24.2582M24.2582 20.4714V31.4657M50.7143 17.9343V39.5L63.1429 13.6771V34.1857M65.9527 34.0029V17.9343H79V34.0029M28.5127 17.9343V34.0029H47.5164V25.9686H33.6182L47.5164 17.9343H28.5127Z\",\n        stroke: \"#3C8FFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"LoginContainer__Forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0424\\u0418\\u041E\",\n        type: \"text\",\n        value: fcs,\n        onChange: e => setFcs(e.target.value),\n        className: \"LoginContainer__Forms__Input\",\n        required: true,\n        textarea: \"font - size: 100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => emailHandler(e),\n        className: \"LoginContainer__Forms__Input\",\n        textarea: \"font - size: 100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoginContainer__Error\",\n        children: [\" \", emailError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => passwordHandler(e),\n        className: \"LoginContainer__Forms__Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), passwordError == 'Ненадежный пароль' ? /*#__PURE__*/_jsxDEV(PasswordRules, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }, this) : null, passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoginContainer__Error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        name: \"passwordEqual\",\n        onBlur: e => blurHandler(e),\n        type: \"password\",\n        onChange: e => e.target.value != password ? setPasswordEqual(false) : setPasswordEqual(true),\n        className: \"LoginContainer__Forms__Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), passwordEqualDirty ? passwordEqual ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoginContainer__Forms__PasswordEqualError\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0438 \\u043D\\u0435 \\u0441\\u043E\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 51\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: !formValid,\n        className: \"LoginContainer__Forms__Button\",\n        type: \"button\",\n        onClick: () => registerHandler(),\n        value: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"LoginContainer__Registration\",\n        onClick: () => setModalActive('login'),\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RegistrationFormContainer, \"OuXPBs+pAZBV9M7ZSrXbCKydAPY=\");\n\n_c = RegistrationFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationFormContainer\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/Components/RegistrationFormContainer.jsx"],"names":["React","useEffect","useState","useContext","Context","PasswordRules","RegistrationFormContainer","password","setPassword","email","setEmail","passwordEqual","setPasswordEqual","fcs","setFcs","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","passwordEqualDirty","setPasswordEqualDirty","blurHandler","e","target","name","emailHandler","value","re","test","String","toLowerCase","registerHandler","store","registration","setModalActive","passwordHandler","RegExp","setAuth","userData","clearLoginForm"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect } from 'react'\nimport { useState, useContext } from 'react'\nimport { Context } from '../Context'\nimport PasswordRules from './PasswordRules'\n\nexport default function RegistrationFormContainer() {\n\tconst [password, setPassword] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [passwordEqual, setPasswordEqual] = useState(false)\n\tconst [fcs, setFcs] = useState('')\n\tconst [emailDirty, setEmailDirty] = useState(false)\n\tconst [passwordDirty, setPasswordDirty] = useState(false)\n\tconst [emailError, setEmailError] = useState('Email Не может быть пустым')\n\tconst [passwordError, setPasswordError] = useState('Пароль Не может быть пустым')\n\tconst [formValid, setFormValid] = useState(false)\n\tconst [passwordEqualDirty, setPasswordEqualDirty] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (emailError || passwordError || passwordEqual == false) {\n\t\t\tsetFormValid(false)\n\t\t} else {\n\t\t\tsetFormValid(true)\n\t\t}\n\t}, [emailError, passwordError])\n\n\n\n\n\tconst blurHandler = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase 'email':\n\t\t\t\tsetEmailDirty(true)\n\n\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tsetPasswordDirty(true)\n\n\t\t\tcase 'passwordEqual':\n\t\t\t\tsetPasswordEqualDirty(true)\n\n\n\t\t}\n\t}\n\n\tconst emailHandler = (e) => {\n\t\tsetEmail(e.target.value)\n\n\t\tconst re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n\t\tif (e.target.value == '') {\n\t\t\tsetEmailError('Email не может быть пустым')\n\t\t}\n\n\n\t\telse if (!re.test(String(e.target.value).toLowerCase())) {\n\t\t\tsetEmailError('Некорректный Email')\n\t\t\tsetEmailDirty(false)\n\n\n\n\n\t\t}\n\t\telse {\n\t\t\tsetEmailError('')\n\t\t\tsetEmailDirty(false)\n\n\t\t}\n\n\t}\n\tfunction registerHandler() {\n\t\tstore.registration(email, password, fcs)\n\t\tsetModalActive('register_confirm')\n\t}\n\n\tconst passwordHandler = (e) => {\n\t\tsetPassword(e.target.value)\n\n\t\tconst re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,64})\");\n\t\tif (e.target.value == '') {\n\t\t\tsetPasswordError('Пароль не может быть пустым')\n\t\t}\n\n\n\n\t\telse if (!re.test(String(e.target.value))) {\n\t\t\tsetPasswordError('Ненадежный пароль')\n\n\n\n\t\t}\n\t\telse {\n\t\t\tsetPasswordError('')\n\t\t}\n\t}\n\n\n\n\tconst { store, setModalActive, setAuth, userData } = useContext(Context)\n\tfunction clearLoginForm() {\n\t\tsetFcs('')\n\t\tsetPassword('')\n\t\tsetEmail('')\n\t\tsetModalActive(false)\n\n\t}\n\treturn (\n\t\t<div className=' LoginContainer LoginContainerVisible'>\n\t\t\t<button className='LoginContainer__CloseButton' onClick={() => clearLoginForm()} >╳</button>\n\t\t\t<svg className='LoginContainer__Logo' width=\"200\" height=\"150\" viewBox=\"0 0 80 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path d=\"M1 17.9343V34.0029H24.2582V31.4657M1 17.9343H24.2582V20.4714M1 17.9343L6.95636 10.5343L8.65818 16.8771L13.48 2.5L16.8836 16.8771L21.1382 10.5343L24.2582 16.8771M24.2582 20.4714H13.48L4.40364 31.4657H24.2582M24.2582 20.4714V31.4657M50.7143 17.9343V39.5L63.1429 13.6771V34.1857M65.9527 34.0029V17.9343H79V34.0029M28.5127 17.9343V34.0029H47.5164V25.9686H33.6182L47.5164 17.9343H28.5127Z\" stroke=\"#3C8FFF\" />\n\t\t\t</svg>\n\t\t\t<form className='LoginContainer__Forms'>\n\t\t\t\t<input placeholder='ФИО' type=\"text\" value={fcs} onChange={e => setFcs(e.target.value)} className='LoginContainer__Forms__Input' required={true}\n\t\t\t\t\ttextarea='font - size: 100px' />\n\n\n\n\n\t\t\t\t<input placeholder='Email' onBlur={e => blurHandler(e)} name='email' type=\"email\" value={email} onChange={e => emailHandler(e)} className='LoginContainer__Forms__Input'\n\t\t\t\t\ttextarea='font - size: 100px' />\n\n\n\t\t\t\t{(emailDirty && emailError) && <div className='LoginContainer__Error' > {emailError}</div>}\n\n\n\n\n\t\t\t\t<input placeholder='Пароль' onBlur={e => blurHandler(e)} name='password' type=\"password\" value={password} onChange={e => passwordHandler(e)} className='LoginContainer__Forms__Input' />\n\n\t\t\t\t{passwordError == 'Ненадежный пароль' ? <PasswordRules /> : null}\n\n\n\t\t\t\t{(passwordDirty && passwordError) && <div className='LoginContainer__Error' >{passwordError}</div>}\n\n\n\n\t\t\t\t<input placeholder='Подтвердите пароль' name='passwordEqual' onBlur={e => blurHandler(e)} type=\"password\" onChange={e => (e.target.value != password ? setPasswordEqual(false) : setPasswordEqual(true))} className='LoginContainer__Forms__Input' />\n\t\t\t\t{passwordEqualDirty ? (passwordEqual ? null : <div className='LoginContainer__Forms__PasswordEqualError' >Пароли не совпадают</div>) : null}\n\n\n\n\n\t\t\t\t<input disabled={!formValid} className='LoginContainer__Forms__Button' type=\"button\" onClick={() => registerHandler()} value=\"Зарегистрироваться\" />\n\n\t\t\t\t<button className='LoginContainer__Registration' onClick={() => setModalActive('login')}>Войти</button>\n\n\n\t\t\t</form >\n\t\t</div >\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}