{"ast":null,"code":"var _jsxFileName = \"/Users/bogdan/Documents/OSvip/Osvip/Osvip/src/Components/RegistrationConfirm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../Context';\nimport api, { API_URL } from '../http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationConfirm() {\n  _s();\n\n  const {\n    setModalActive,\n    password,\n    setPasswordEqual,\n    userData,\n    store,\n    setAuth\n  } = useContext(Context);\n  const [confirmCode, setConfirmCode] = useState('');\n  const [error, setError] = useState('');\n\n  function confirmed(access) {\n    setAuth(true);\n    localStorage.setItem('access_token', access);\n  }\n\n  function submitHandler() {\n    console.log(confirmCode);\n    api.post(API_URL + '/user/confirmEmail', {\n      userId: store.user.id,\n      code: confirmCode\n    }).then(response => response.status == 200 ? confirmed(response.data['access_token']) : setError('Неправильный код подтверждения')).catch(setError('Неправильный код подтверждения'));\n    setModalActive(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" LoginContainer LoginContainerVisible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginContainer__CloseButton\",\n      onClick: () => setModalActive(false),\n      children: \"\\u2573\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginContainer__EmailMessage\",\n      children: [\"\\u041D\\u0430  \\u043F\\u043E\\u0447\\u0442\\u0443 \", store.user.email, \"  \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D \\u043A\\u043E\\u0434 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"LoginContainer__Forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"LoginContainer__Forms__Input\",\n        type: \"text\",\n        value: confirmCode,\n        placeholder: \"\",\n        onChange: e => setConfirmCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoginContainer__ConfirmCodeError\",\n        children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043A\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginContainer__Forms__Button\",\n      onClick: submitHandler,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RegistrationConfirm, \"r+DT4bg8pKhw/XxqoVD1JGQv/o8=\");\n\n_c = RegistrationConfirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationConfirm\");","map":{"version":3,"sources":["/Users/bogdan/Documents/OSvip/Osvip/Osvip/src/Components/RegistrationConfirm.jsx"],"names":["React","useState","useContext","Context","api","API_URL","RegistrationConfirm","setModalActive","password","setPasswordEqual","userData","store","setAuth","confirmCode","setConfirmCode","error","setError","confirmed","access","localStorage","setItem","submitHandler","console","log","post","userId","user","id","code","then","response","status","data","catch","email","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,SAA7B;;AAMA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,gBAA5B;AAA8CC,IAAAA,QAA9C;AAAwDC,IAAAA,KAAxD;AAA+DC,IAAAA;AAA/D,MAA2EV,UAAU,CAACC,OAAD,CAA3F;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;AAGA,WAASgB,SAAT,CAAmBC,MAAnB,EAA2B;AAC1BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,MAArC;AAGA;;AAKD,WAASG,aAAT,GAAyB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AAIAT,IAAAA,GAAG,CAACoB,IAAJ,CAASnB,OAAO,GAAG,oBAAnB,EAAyC;AAAEoB,MAAAA,MAAM,EAAEd,KAAK,CAACe,IAAN,CAAWC,EAArB;AAAyBC,MAAAA,IAAI,EAAEf;AAA/B,KAAzC,EACEgB,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,GACjBd,SAAS,CAACa,QAAQ,CAACE,IAAT,CAAc,cAAd,CAAD,CADQ,GAOfhB,QAAQ,CAAC,gCAAD,CARZ,EAQgDiB,KARhD,CAQsDjB,QAAQ,CAAC,gCAAD,CAR9D;AASAT,IAAAA,cAAc,CAAC,KAAD,CAAd;AAMA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,4BAGC;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,KAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,kEAAyDI,KAAK,CAACe,IAAN,CAAWQ,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA,8BAEC;AAAO,QAAA,SAAS,EAAC,8BAAjB;AAAgD,QAAA,IAAI,EAAC,MAArD;AAA4D,QAAA,KAAK,EAAErB,WAAnE;AAAgF,QAAA,WAAW,EAAC,EAA5F;AAA+F,QAAA,QAAQ,EAAEsB,CAAC,IAAIrB,cAAc,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5H;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAeC;AAAQ,MAAA,SAAS,EAAC,+BAAlB;AAAkD,MAAA,OAAO,EAAEhB,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA;;GA1DuBf,mB;;KAAAA,mB","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\n\nimport { Context } from '../Context'\nimport api, { API_URL } from '../http'\n\n\n\n\n\nexport default function RegistrationConfirm() {\n\tconst { setModalActive, password, setPasswordEqual, userData, store, setAuth } = useContext(Context)\n\tconst [confirmCode, setConfirmCode] = useState('')\n\tconst [error, setError] = useState('')\n\n\n\tfunction confirmed(access) {\n\t\tsetAuth(true)\n\t\tlocalStorage.setItem('access_token', access)\n\n\n\t}\n\n\n\n\n\tfunction submitHandler() {\n\t\tconsole.log(confirmCode)\n\n\n\n\t\tapi.post(API_URL + '/user/confirmEmail', { userId: store.user.id, code: confirmCode })\n\t\t\t.then(response => response.status == 200 ?\n\t\t\t\tconfirmed(response.data['access_token'])\n\n\n\n\n\n\t\t\t\t: setError('Неправильный код подтверждения')).catch(setError('Неправильный код подтверждения'))\n\t\tsetModalActive(false)\n\n\n\n\n\n\t}\n\n\treturn (\n\t\t<div className=' LoginContainer LoginContainerVisible'>\n\n\n\t\t\t<button className='LoginContainer__CloseButton' onClick={() => setModalActive(false)} >╳</button>\n\t\t\t<div className='LoginContainer__EmailMessage'>На  почту {store.user.email}  отправлен код подтверждения </div>\n\t\t\t<form className='LoginContainer__Forms'>\n\n\t\t\t\t<input className='LoginContainer__Forms__Input' type='text' value={confirmCode} placeholder='' onChange={e => setConfirmCode(e.target.value)} />\n\t\t\t\t<div className='LoginContainer__ConfirmCodeError'>Неверный код</div>\n\n\n\n\n\n\t\t\t</form >\n\t\t\t<button className='LoginContainer__Forms__Button' onClick={submitHandler}>Отправить</button>\n\t\t</div >\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}