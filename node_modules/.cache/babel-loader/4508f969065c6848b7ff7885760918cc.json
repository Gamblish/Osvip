{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/Components/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Context } from '../Context';\nimport { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport api, { API_URL } from '../http';\nimport axios from 'axios';\nimport ResponseOption from './ResponseOption';\nimport { useTimer } from 'use-timer';\nimport Moment from \"react-moment\";\nimport { useLayoutEffect } from 'react';\nimport Timer from './Timer';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  const [tests, setTests] = useState();\n  const {\n    setCurrentPage,\n    store,\n    setAuth,\n    userData,\n    setTestActivated\n  } = useContext(Context);\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [apiTime, setApiTime] = useState();\n  const [myTime, setMyTime] = useState();\n  const [answerIds, setAnswerIds] = useState([]);\n  const History = useNavigate();\n\n  function SubmitAnswers() {\n    api.post('/Tests/answer', answerIds).then(x => userData.result = x.data).then(() => History('/profile'));\n  }\n\n  useEffect(() => api.post(API_URL + \"/Tests/user/test\").then(x => {\n    console.log(x);\n    setTests(x.data);\n    setTestActivated(true);\n    var s = new Date(x.data.testStartTime);\n    setApiTime(Number(s.getHours() * 3600) + Number(s.getMinutes()) * 60 + Number(s.getSeconds()));\n    var i = Date.now();\n    var tpme = new Date(i);\n    setMyTime(Number(tpme.getHours()) * 3600 + Number(tpme.getMinutes()) * 60 + Number(tpme.getSeconds()));\n    console.log(x.data)(Number(tpme.getHours()) * 3600 + Number(tpme.getMinutes()) * 60 + Number(tpme.getSeconds()) - (Number(s.getHours() * 3600) + Number(s.getMinutes()) * 60 + Number(s.getSeconds())) > 900 ? History('/profile') : null);\n  }), []);\n\n  function saveAnswer(value) {\n    answerIds[questionNumber] = value;\n    console.log(answerIds);\n  }\n\n  useEffect(() => setCurrentPage('/pisa'), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomeContainer__Header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HomeContainer__Header__Text TestsHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TestContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TestContainer__Timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this), apiTime != null && myTime != null ? /*#__PURE__*/_jsxDEV(Timer, {\n          userData: userData,\n          answerIds: answerIds,\n          myTime: myTime,\n          apiTime: apiTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TestContainer__QuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"TestContainer__QuestionContainer__Number\",\n          children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116: \", questionNumber + 1, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"TestContainer__QuestionContainer__Question\",\n          children: tests != null ? tests.test.question[questionNumber].question : 'Загрузака...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TestContainer__Answers\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TestContainer__Answers__ResponseOptions\",\n          children: tests != null ? tests.test.question[questionNumber].responses.map(x => /*#__PURE__*/_jsxDEV(ResponseOption, {\n            answerIds: answerIds,\n            saveAnswer: saveAnswer,\n            response: x\n          }, questionNumber + '' + x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 79\n          }, this)) : 'Загрузкаа...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TestContainer__NavigateButtons\",\n        children: [questionNumber == 0 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setQuestionNumber(questionNumber - 1),\n          children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 36\n        }, this), tests != null ? tests.test.question.length == questionNumber + 1 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setQuestionNumber(questionNumber + 1),\n          children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 81\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SubmitButton\",\n      onClick: SubmitAnswers,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n} //{tests != null ? tests['test'].testResponses.map(x => <ResponseOption response={x.response} />) : 'Загрузкаа...'}\n//Math.floor((900 - time) / 60) + ':' + ((900 - time) % 60)\n\n_s(Test, \"/NV08RAqtzeTLWo5OxiI9T6M7rA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/Components/Test.jsx"],"names":["React","Context","useContext","useEffect","useState","api","API_URL","axios","ResponseOption","useTimer","Moment","useLayoutEffect","Timer","useNavigate","Test","tests","setTests","setCurrentPage","store","setAuth","userData","setTestActivated","questionNumber","setQuestionNumber","apiTime","setApiTime","myTime","setMyTime","answerIds","setAnswerIds","History","SubmitAnswers","post","then","x","result","data","console","log","s","Date","testStartTime","Number","getHours","getMinutes","getSeconds","i","now","tpme","saveAnswer","value","test","question","responses","map","id","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Context } from '../Context'\nimport { useContext } from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport api, { API_URL } from '../http'\nimport axios from 'axios'\nimport ResponseOption from './ResponseOption'\nimport { useTimer } from 'use-timer';\nimport Moment from \"react-moment\";\nimport { useLayoutEffect } from 'react'\nimport Timer from './Timer'\n\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Test() {\n\n\tconst [tests, setTests] = useState()\n\tconst { setCurrentPage, store, setAuth, userData, setTestActivated } = useContext(Context)\n\tconst [questionNumber, setQuestionNumber] = useState(0)\n\tconst [apiTime, setApiTime] = useState()\n\tconst [myTime, setMyTime] = useState()\n\tconst [answerIds, setAnswerIds] = useState([])\n\n\tconst History = useNavigate();\n\n\n\n\tfunction SubmitAnswers() {\n\t\tapi.post('/Tests/answer', answerIds).then(x => userData.result = x.data).then(() => History('/profile'))\n\t}\n\n\n\n\n\tuseEffect(() =>\n\t(api.post(API_URL + \"/Tests/user/test\").then(x => {\n\t\tconsole.log(x)\n\t\tsetTests(x.data)\n\n\t\tsetTestActivated(true)\n\n\t\tvar s = new Date(x.data.testStartTime)\n\t\tsetApiTime((\n\t\t\t(Number((s.getHours()) * 3600)) +\n\t\t\t(Number(s.getMinutes()) * 60) +\n\t\t\t(Number(s.getSeconds()))\n\t\t))\n\t\tvar i = Date.now()\n\n\t\tvar tpme = new Date(i)\n\n\t\tsetMyTime(((Number(tpme.getHours()) * 3600) + (Number(tpme.getMinutes()) * 60) + (Number(tpme.getSeconds()))))\n\n\t\tconsole.log(x.data)\n\n\t\t\t((((Number(tpme.getHours()) * 3600) + (Number(tpme.getMinutes()) * 60) + (Number(tpme.getSeconds()))) - (\n\t\t\t\t(Number((s.getHours()) * 3600)) +\n\t\t\t\t(Number(s.getMinutes()) * 60) +\n\t\t\t\t(Number(s.getSeconds()))\n\t\t\t)) > 900 ? History('/profile') : null)\n\t}\n\n\t)\n\n\t), [])\n\n\tfunction saveAnswer(value) {\n\t\tanswerIds[questionNumber] = value\n\t\tconsole.log(answerIds)\n\n\n\t}\n\n\tuseEffect(() => setCurrentPage('/pisa'), [])\n\n\n\n\n\n\treturn (\n\t\t<div>\n\n\t\t\t<div className=\"HomeContainer__Header\">\n\t\t\t\t<div className='HomeContainer__Header__Text TestsHeader'>\n\n\t\t\t\t\t<span>Тестирование</span>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='TestContainer'>\n\t\t\t\t<div className='TestContainer__Timer'>\n\t\t\t\t\t<span>Выберите один вариант ответа:</span>\n\t\t\t\t\t{apiTime != null && myTime != null ? <Timer userData={userData} answerIds={answerIds} myTime={myTime} apiTime={apiTime} /> : null}\n\n\t\t\t\t</div>\n\t\t\t\t<div className='TestContainer__QuestionContainer'>\n\t\t\t\t\t<span className='TestContainer__QuestionContainer__Number' >Вопрос №: {questionNumber + 1}.</span>\n\t\t\t\t\t<span className='TestContainer__QuestionContainer__Question'>{tests != null ? tests.test.question[questionNumber].question : 'Загрузака...'}</span>\n\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className='TestContainer__Answers'>\n\t\t\t\t\t<div className='TestContainer__Answers__ResponseOptions'>\n\n\t\t\t\t\t\t{tests != null ? tests.test.question[questionNumber].responses.map(x => <ResponseOption answerIds={answerIds} key={questionNumber + '' + x.id} saveAnswer={saveAnswer} response={x} />) : 'Загрузкаа...'}\n\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='TestContainer__NavigateButtons'>\n\t\t\t\t\t{questionNumber == 0 ? null : <button onClick={() => setQuestionNumber(questionNumber - 1)}>\n\t\t\t\t\t\tПредыдущий вопрос\n\n\t\t\t\t\t</button>}\n\t\t\t\t\t{tests != null ? tests.test.question.length == questionNumber + 1 ? null : <button onClick={() => setQuestionNumber(questionNumber + 1)}>\n\t\t\t\t\t\tСледующий вопрос\n\n\t\t\t\t\t</button> : null}\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t\t<button className='SubmitButton' onClick={SubmitAnswers}>Отправить</button>\n\n\n\t\t</div>\n\t)\n}\n//{tests != null ? tests['test'].testResponses.map(x => <ResponseOption response={x.response} />) : 'Загрузкаа...'}\n//Math.floor((900 - time) / 60) + ':' + ((900 - time) % 60)"]},"metadata":{},"sourceType":"module"}