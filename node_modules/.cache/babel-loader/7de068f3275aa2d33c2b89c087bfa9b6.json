{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/Components/RegistrationConfirm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport Cookies from 'universal-cookie';\nimport { Context } from '../Context';\nimport api, { API_URL } from '../http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationConfirm() {\n  _s();\n\n  const {\n    clearLoginForm,\n    password,\n    setPasswordEqual,\n    userData,\n    store,\n    setAuth\n  } = useContext(Context);\n  const [confirmCode, setConfirmCode] = useState('');\n  const [error, setError] = useState('');\n\n  function submitHandler() {\n    console.log(confirmCode);\n    var massiv = new Map();\n    massiv.set(\"userId\", store.user.id);\n    massiv.set(\"code\", confirmCode);\n    api.get(API_URL + '/user/confirmEmail', massiv).then(response => response.status == 200 ? () => {\n      setAuth(true);\n      localStorage.setItem('access_token', response.data['access_token']);\n    } : setError('Неправильный код подтверждения')).catch(setError('Неправильный код подтверждения'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" LoginContainer LoginContainerVisible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginContainer__CloseButton\",\n      onClick: () => clearLoginForm(),\n      children: \"\\u2573\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041D\\u0430 \\u043F\\u043E\\u0447\\u0442\\u0443 \", store.user.email, \" \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D \\u043A\\u043E\\u0434 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"LoginContainer__Forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: confirmCode,\n        placeholder: \"\",\n        onChange: e => setConfirmCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RegistrationConfirm, \"pXb/zmD+n34KxDDS8aZnFHvNHdc=\");\n\n_c = RegistrationConfirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationConfirm\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/Components/RegistrationConfirm.jsx"],"names":["React","useState","useContext","Cookies","Context","api","API_URL","RegistrationConfirm","clearLoginForm","password","setPasswordEqual","userData","store","setAuth","confirmCode","setConfirmCode","error","setError","submitHandler","console","log","massiv","Map","set","user","id","get","then","response","status","localStorage","setItem","data","catch","email","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,SAA7B;;AAMA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,gBAA5B;AAA8CC,IAAAA,QAA9C;AAAwDC,IAAAA,KAAxD;AAA+DC,IAAAA;AAA/D,MAA2EX,UAAU,CAACE,OAAD,CAA3F;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAKA,WAASiB,aAAT,GAAyB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,QAAIO,MAAM,GAAG,IAAIC,GAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqBX,KAAK,CAACY,IAAN,CAAWC,EAAhC;AACAJ,IAAAA,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBT,WAAnB;AACAT,IAAAA,GAAG,CAACqB,GAAJ,CAAQpB,OAAO,GAAG,oBAAlB,EAAwCe,MAAxC,EACEM,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,GAAyB,MAAM;AAEhDhB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,QAAQ,CAACI,IAAT,CAAc,cAAd,CAArC;AAEA,KALiB,GAKdf,QAAQ,CAAC,gCAAD,CANb,EAMiDgB,KANjD,CAMuDhB,QAAQ,CAAC,gCAAD,CAN/D;AASA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,4BAGC;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,MAAMT,cAAc,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA,iEAAeI,KAAK,CAACY,IAAN,CAAWU,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA,8BAEC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEpB,WAA1B;AAAuC,QAAA,WAAW,EAAC,EAAnD;AAAsD,QAAA,QAAQ,EAAEqB,CAAC,IAAIpB,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnF;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,kBAAMrB;AAAN;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAeC;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA;;GA5CuBX,mB;;KAAAA,mB","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useContext } from 'react'\nimport Cookies from 'universal-cookie'\nimport { Context } from '../Context'\nimport api, { API_URL } from '../http'\n\n\n\n\n\nexport default function RegistrationConfirm() {\n\tconst { clearLoginForm, password, setPasswordEqual, userData, store, setAuth } = useContext(Context)\n\tconst [confirmCode, setConfirmCode] = useState('')\n\tconst [error, setError] = useState('')\n\n\n\n\n\tfunction submitHandler() {\n\t\tconsole.log(confirmCode)\n\t\tvar massiv = new Map()\n\t\tmassiv.set(\"userId\", store.user.id)\n\t\tmassiv.set(\"code\", confirmCode)\n\t\tapi.get(API_URL + '/user/confirmEmail', massiv)\n\t\t\t.then(response => response.status == 200 ? () => {\n\n\t\t\t\tsetAuth(true)\n\t\t\t\tlocalStorage.setItem('access_token', response.data['access_token'])\n\n\t\t\t} : setError('Неправильный код подтверждения')).catch(setError('Неправильный код подтверждения'))\n\n\n\t}\n\n\treturn (\n\t\t<div className=' LoginContainer LoginContainerVisible'>\n\n\n\t\t\t<button className='LoginContainer__CloseButton' onClick={() => clearLoginForm()} >╳</button>\n\t\t\t<div>На почту {store.user.email} отправлен код подтверждения </div>\n\t\t\t<form className='LoginContainer__Forms'>\n\n\t\t\t\t<input type='text' value={confirmCode} placeholder='' onChange={e => setConfirmCode(e.target.value)} />\n\t\t\t\t<div>{error}</div>\n\n\n\n\n\n\t\t\t</form >\n\t\t\t<button onClick={submitHandler}>Отправить</button>\n\t\t</div >\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}