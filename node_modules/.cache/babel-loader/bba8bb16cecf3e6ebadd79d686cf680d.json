{"ast":null,"code":"import { AuthResponse } from \"../models/response/AuthRespone\";\nimport AuthService from \"../services/AuthService\";\nimport { IUser } from \"../models/IUser\";\nimport { useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport api from \"../http\";\nimport { Link } from \"react-router-dom\";\nexport default class Store {\n  constructor() {\n    this.user = new IUser();\n    this.isAuth = false;\n  }\n\n  setAuth(bool) {\n    this.isAuth = bool;\n    console.log(this.isAuth);\n  }\n\n  setUser(user) {\n    this.user = user;\n  }\n\n  async login(email, password, clear, setAuth, setUserData, setImgPath, setError) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('access_token', response.data['access_token']);\n      setUserData(response.data['userInfo']);\n      setImgPath(response.data['userInfo'].imgPath);\n      this.user.id = response.data['userInfo'].id;\n      this.user.email = response.data['userInfo'].email;\n      this.user.fcs = response.data['userInfo'].fcs;\n      clear();\n      setAuth(true);\n    } catch {\n      setError('Неправильный  Логин/пароль');\n    }\n  }\n\n  async registration(email, password, fcs, setModalActive) {\n    try {\n      const response = await AuthService.registration(email, password, fcs);\n      console.log(response);\n      this.user.id = response.data['userInfo'].id;\n      this.user.email = response.data['userInfo'].email;\n      this.user.fcs = response.data['userInfo'].fcs;\n      console.log(this.user);\n      setModalActive('register_confirm');\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  }\n\n  async logout(setAuth) {\n    try {\n      //const response = await AuthService.logout();\n      localStorage.removeItem('access_token');\n      setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n\n      console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bogdan/Desktop/Osvip/Osvip/src/store/Store.jsx"],"names":["AuthResponse","AuthService","IUser","useContext","Context","api","Link","Store","user","isAuth","setAuth","bool","console","log","setUser","login","email","password","clear","setUserData","setImgPath","setError","response","localStorage","setItem","data","imgPath","id","fcs","registration","setModalActive","e","message","logout","removeItem"],"mappings":"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","sourcesContent":["import { AuthResponse } from \"../models/response/AuthRespone\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport api from \"../http\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Store {\r\n\tuser = new IUser();\r\n\tisAuth = false;\r\n\r\n\r\n\r\n\r\n\r\n\tsetAuth(bool) {\r\n\t\tthis.isAuth = bool\r\n\t\tconsole.log(this.isAuth)\r\n\t}\r\n\r\n\tsetUser(user) {\r\n\t\tthis.user = user;\r\n\r\n\t}\r\n\r\n\tasync login(email, password, clear, setAuth, setUserData, setImgPath, setError) {\r\n\t\ttry {\r\n\t\t\tconst response = await AuthService.login(email, password);\r\n\t\t\tconsole.log(response)\r\n\t\t\tlocalStorage.setItem('access_token', response.data['access_token']);\r\n\t\t\tsetUserData(response.data['userInfo'])\r\n\t\t\tsetImgPath(response.data['userInfo'].imgPath)\r\n\r\n\t\t\tthis.user.id = (response.data['userInfo'].id)\r\n\t\t\tthis.user.email = (response.data['userInfo'].email)\r\n\t\t\tthis.user.fcs = (response.data['userInfo'].fcs)\r\n\r\n\r\n\r\n\t\t\tclear()\r\n\t\t\tsetAuth(true)\r\n\t\t} catch {\r\n\t\t\tsetError('Неправильный  Логин/пароль')\r\n\t\t}\r\n\r\n\t}\r\n\tasync registration(email, password, fcs, setModalActive,) {\r\n\t\ttry {\r\n\r\n\t\t\tconst response = await AuthService.registration(email, password, fcs);\r\n\t\t\tconsole.log(response)\r\n\r\n\r\n\r\n\r\n\t\t\tthis.user.id = (response.data['userInfo'].id)\r\n\t\t\tthis.user.email = (response.data['userInfo'].email)\r\n\t\t\tthis.user.fcs = (response.data['userInfo'].fcs)\r\n\t\t\tconsole.log(this.user)\r\n\r\n\t\t\tsetModalActive('register_confirm')\r\n\r\n\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.response?.data?.message)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tasync logout(setAuth) {\r\n\t\ttry {\r\n\t\t\t//const response = await AuthService.logout();\r\n\t\t\tlocalStorage.removeItem('access_token');\r\n\t\t\tsetAuth(false)\r\n\t\t\tthis.setUser({})\r\n\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.response?.data?.message)\r\n\t\t}\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}