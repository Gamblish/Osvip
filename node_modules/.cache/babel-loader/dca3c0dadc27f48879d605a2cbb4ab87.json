{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/Components/RegistrationFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { Context } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationFormContainer() {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [passwordEqual, setPasswordEqual] = useState(true);\n  const [fcs, setFcs] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Email Не может быть пустым');\n  const [passwordError, setPasswordError] = useState('Пароль Не может быть пустым');\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n\n      case 'password':\n        setPasswordDirty(true);\n    }\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{1,})$/i;\n\n    if (!re.test(String(email).toLowerCase())) {\n      setEmailError('Некорректный Email');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    const re = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})\";\n\n    if (!re.test(String(password).toLowerCase())) {\n      setPasswordError('Пароль должен содержать минимум 6 символов включая специальный символ,бо');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const {\n    store,\n    setModalActive,\n    setAuth\n  } = useContext(Context);\n\n  function clearLoginForm() {\n    setFcs('');\n    setPassword('');\n    setEmail('');\n    setModalActive(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" LoginContainer LoginContainerVisible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginContainer__CloseButton\",\n      onClick: () => clearLoginForm(),\n      children: \"\\u2573\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"LoginContainer__Logo\",\n      width: \"200\",\n      height: \"150\",\n      viewBox: \"0 0 80 40\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M1 17.9343V34.0029H24.2582V31.4657M1 17.9343H24.2582V20.4714M1 17.9343L6.95636 10.5343L8.65818 16.8771L13.48 2.5L16.8836 16.8771L21.1382 10.5343L24.2582 16.8771M24.2582 20.4714H13.48L4.40364 31.4657H24.2582M24.2582 20.4714V31.4657M50.7143 17.9343V39.5L63.1429 13.6771V34.1857M65.9527 34.0029V17.9343H79V34.0029M28.5127 17.9343V34.0029H47.5164V25.9686H33.6182L47.5164 17.9343H28.5127Z\",\n        stroke: \"#3C8FFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"LoginContainer__Forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0424\\u0418\\u041E\",\n        type: \"text\",\n        value: fcs,\n        onChange: e => setFcs(e.target.value),\n        className: \"LoginContainer__Forms__Input\",\n        required: true,\n        textarea: \"font - size: 100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: [\" \", emailError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => emailHandler(e),\n        className: \"LoginContainer__Forms__Input\",\n        textarea: \"font - size: 100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"LoginContainer__Forms__Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        onChange: e => e.target.value != password ? setPasswordEqual(false) : setPasswordEqual(true),\n        className: \"LoginContainer__Forms__Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), passwordEqual ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u041D\\u0435\\u043F\\u0440\\u0430\\u043B\\u044C\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"LoginContainer__Forms__Button\",\n        type: \"button\",\n        onClick: () => store.registration(email, password, clearLoginForm, setAuth, fcs),\n        value: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"LoginContainer__Registration\",\n        onClick: () => setModalActive('login'),\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RegistrationFormContainer, \"QKKKgQSc2vKz1bvysi2zd+HMu9o=\");\n\n_c = RegistrationFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationFormContainer\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/Components/RegistrationFormContainer.jsx"],"names":["React","useState","useContext","Context","RegistrationFormContainer","password","setPassword","email","setEmail","passwordEqual","setPasswordEqual","fcs","setFcs","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","blurHandler","e","target","name","emailHandler","value","re","test","String","toLowerCase","passwordHandler","store","setModalActive","setAuth","clearLoginForm","color","registration"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useContext } from 'react'\nimport { Context } from '../Context'\n\nexport default function RegistrationFormContainer() {\n\tconst [password, setPassword] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [passwordEqual, setPasswordEqual] = useState(true)\n\tconst [fcs, setFcs] = useState('')\n\tconst [emailDirty, setEmailDirty] = useState(false)\n\tconst [passwordDirty, setPasswordDirty] = useState(false)\n\tconst [emailError, setEmailError] = useState('Email Не может быть пустым')\n\tconst [passwordError, setPasswordError] = useState('Пароль Не может быть пустым')\n\n\tconst blurHandler = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase 'email':\n\t\t\t\tsetEmailDirty(true)\n\n\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tsetPasswordDirty(true)\n\n\n\t\t}\n\t}\n\n\tconst emailHandler = (e) => {\n\t\tsetEmail(e.target.value)\n\n\t\tconst re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{1,})$/i;\n\t\tif (!re.test(String(email).toLowerCase())) {\n\t\t\tsetEmailError('Некорректный Email')\n\n\n\t\t}\n\t\telse {\n\t\t\tsetEmailError('')\n\t\t}\n\t}\n\n\tconst passwordHandler = (e) => {\n\t\tsetPassword(e.target.value)\n\n\t\tconst re = (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})\");\n\t\tif (!re.test(String(password).toLowerCase())) {\n\t\t\tsetPasswordError('Пароль должен содержать минимум 6 символов включая специальный символ,бо')\n\n\n\t\t}\n\t\telse {\n\t\t\tsetPasswordError('')\n\t\t}\n\t}\n\n\n\n\tconst { store, setModalActive, setAuth, } = useContext(Context)\n\tfunction clearLoginForm() {\n\t\tsetFcs('')\n\t\tsetPassword('')\n\t\tsetEmail('')\n\t\tsetModalActive(false)\n\n\t}\n\treturn (\n\t\t<div className=' LoginContainer LoginContainerVisible'>\n\t\t\t<button className='LoginContainer__CloseButton' onClick={() => clearLoginForm()} >╳</button>\n\t\t\t<svg className='LoginContainer__Logo' width=\"200\" height=\"150\" viewBox=\"0 0 80 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path d=\"M1 17.9343V34.0029H24.2582V31.4657M1 17.9343H24.2582V20.4714M1 17.9343L6.95636 10.5343L8.65818 16.8771L13.48 2.5L16.8836 16.8771L21.1382 10.5343L24.2582 16.8771M24.2582 20.4714H13.48L4.40364 31.4657H24.2582M24.2582 20.4714V31.4657M50.7143 17.9343V39.5L63.1429 13.6771V34.1857M65.9527 34.0029V17.9343H79V34.0029M28.5127 17.9343V34.0029H47.5164V25.9686H33.6182L47.5164 17.9343H28.5127Z\" stroke=\"#3C8FFF\" />\n\t\t\t</svg>\n\t\t\t<form className='LoginContainer__Forms'>\n\t\t\t\t<input placeholder='ФИО' type=\"text\" value={fcs} onChange={e => setFcs(e.target.value)} className='LoginContainer__Forms__Input' required={true}\n\t\t\t\t\ttextarea='font - size: 100px' />\n\n\t\t\t\t{(emailDirty && emailError) && <div style={{ color: 'white' }}> {emailError}</div>}\n\n\n\t\t\t\t<input placeholder='Email' onBlur={e => blurHandler(e)} name='email' type=\"email\" value={email} onChange={e => emailHandler(e)} className='LoginContainer__Forms__Input'\n\t\t\t\t\ttextarea='font - size: 100px' />\n\n\t\t\t\t{(passwordDirty && passwordError) && <div>{passwordError}</div>}\n\n\n\t\t\t\t<input placeholder='Пароль' onBlur={e => blurHandler(e)} name='password' type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className='LoginContainer__Forms__Input' />\n\t\t\t\t<input placeholder='Подтвердите пароль' type=\"password\" onChange={e => (e.target.value != password ? setPasswordEqual(false) : setPasswordEqual(true))} className='LoginContainer__Forms__Input' />\n\t\t\t\t{passwordEqual ? null : <div>Непральна</div>}\n\n\n\n\n\t\t\t\t<input className='LoginContainer__Forms__Button' type=\"button\" onClick={() => store.registration(email, password, clearLoginForm, setAuth, fcs)} value=\"Зарегистрироваться\" />\n\n\t\t\t\t<button className='LoginContainer__Registration' onClick={() => setModalActive('login')}>Войти</button>\n\n\n\t\t\t</form >\n\t\t</div >\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}