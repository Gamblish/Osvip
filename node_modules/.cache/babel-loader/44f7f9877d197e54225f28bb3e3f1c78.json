{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/App.js\",\n    _s = $RefreshSig$();\n\nimport MenuBar from \"./Components/MenuBar\";\nimport Transfer from \"./Pages/Transfer\";\nimport { Context } from \"./Context\";\nimport { BrowserRouter as Router, Route, Routes, Link, Outlet, useLocation } from 'react-router-dom';\nimport Home from \"./Pages/Home\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport { useEffect, useState, useRef } from \"react\";\nimport TDirection from \"./Pages/TDirection\";\nimport Declarations from \"./Pages/Declarations\";\nimport Tests from \"./Pages/Tests\";\nimport Contacts from \"./Pages/Contacts\";\nimport NotFound from \"./Pages/NotFound\";\nimport Login from \"./Components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState('/');\n  const [modalActive, setModalActive] = useState(true);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      currentPage,\n      setCurrentPage\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [currentPage == \"*\" ? null : /*#__PURE__*/_jsxDEV(MenuBar, {\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: currentPage === '*' ? null : 'PageContainer',\n          children: [/*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tdirection\",\n              element: /*#__PURE__*/_jsxDEV(TDirection, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/transfer\",\n              element: /*#__PURE__*/_jsxDEV(Transfer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/declarations\",\n              element: /*#__PURE__*/_jsxDEV(Declarations, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tests\",\n              element: /*#__PURE__*/_jsxDEV(Tests, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contacts\",\n              element: /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Login, {\n            active: modalActive,\n            setActive: setModalActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gNznM7XvCfU2dIhwHhUE7hH48aE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/App.js"],"names":["MenuBar","Transfer","Context","BrowserRouter","Router","Route","Routes","Link","Outlet","useLocation","Home","LoginPage","useEffect","useState","useRef","TDirection","Declarations","Tests","Contacts","NotFound","Login","App","currentPage","setCurrentPage","modalActive","setModalActive"],"mappings":"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","sourcesContent":["\nimport MenuBar from \"./Components/MenuBar\";\nimport Transfer from \"./Pages/Transfer\";\n\nimport { Context } from \"./Context\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n  Outlet,\n  useLocation\n} from 'react-router-dom';\nimport Home from \"./Pages/Home\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport { useEffect, useState, useRef } from \"react\";\nimport TDirection from \"./Pages/TDirection\";\nimport Declarations from \"./Pages/Declarations\";\nimport Tests from \"./Pages/Tests\";\nimport Contacts from \"./Pages/Contacts\";\nimport NotFound from \"./Pages/NotFound\";\nimport Login from \"./Components/Login\";\n\n\n\n\n\n\nfunction App() {\n\n  const [currentPage, setCurrentPage] = useState('/');\n  const [modalActive, setModalActive] = useState(true)\n\n  return (\n    <Context.Provider value={{ currentPage, setCurrentPage }}>\n      <div className=\"App\">\n\n        <Router>\n\n          {currentPage == \"*\" ? null : <MenuBar currentPage={currentPage} />}\n          <div className={currentPage === '*' ? null : 'PageContainer'} >\n            <Routes>\n\n              <Route path='/' element={<Home />} />\n              <Route path='/tdirection' element={<TDirection />} />\n              <Route path='/transfer' element={<Transfer />} />\n              <Route path='/login' element={<LoginPage />} />\n              <Route path='/declarations' element={<Declarations />} />\n              <Route path='/tests' element={<Tests />} />\n              <Route path='/contacts' element={<Contacts />} />\n              <Route path='*' element={<NotFound />} />\n\n\n            </Routes>\n            <Login active={modalActive} setActive={setModalActive} />\n          </div>\n        </Router>\n\n\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}