{"ast":null,"code":"var _jsxFileName = \"/Applications/Osvip/osvip/src/Pages/Tests.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from \"react\";\nimport React from 'react';\nimport { Context } from \"../Context\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tests() {\n  _s();\n\n  const options = [{\n    value: 'name',\n    label: 'name'\n  }, {\n    value: 'name',\n    label: 'name'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n  const {\n    setCurrentPage\n  } = useContext(Context);\n  useEffect(() => setCurrentPage('/tests'), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Downshift, {\n      onChange: selection => alert(`You selected ${selection.value}`),\n      itemToString: item => item ? item.value : '',\n      children: _ref => {\n        let {\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", { ...getLabelProps(),\n            children: \"Enter a fruit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", { ...getMenuProps(),\n            children: isOpen ? items.filter(item => !inputValue || item.value.includes(inputValue)).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", { ...getItemProps({\n                key: item.value,\n                index,\n                item,\n                style: {\n                  backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n                  fontWeight: selectedItem === item ? 'bold' : 'normal'\n                }\n              }),\n              children: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), \", document.getElementById('root'), )\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tests, \"y/QjTq+T4VVMo2svsQkE6zKb4kk=\");\n\n_c = Tests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"sources":["/Applications/Osvip/osvip/src/Pages/Tests.jsx"],"names":["useEffect","useContext","React","Context","Select","Tests","options","value","label","setCurrentPage","selection","alert","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","items","filter","includes","map","index","key","style","backgroundColor","fontWeight"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAHc,CAAhB;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAqBR,UAAU,CAACE,OAAD,CAArC;AACAH,EAAAA,SAAS,CAAC,MAAMS,cAAc,CAAC,QAAD,CAArB,EAAiC,EAAjC,CAAT;AACA,sBACE;AAAA,4BAEE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAEC,SAAS,IAAIC,KAAK,CAAE,gBAAeD,SAAS,CAACH,KAAM,EAAjC,CAD9B;AAEE,MAAA,YAAY,EAAEK,IAAI,IAAKA,IAAI,GAAGA,IAAI,CAACL,KAAR,GAAgB,EAF7C;AAAA,gBAIG;AAAA,YAAC;AACAM,UAAAA,aADA;AAEAC,UAAAA,YAFA;AAGAC,UAAAA,aAHA;AAIAC,UAAAA,YAJA;AAKAC,UAAAA,MALA;AAMAC,UAAAA,UANA;AAOAC,UAAAA,gBAPA;AAQAC,UAAAA;AARA,SAAD;AAAA,4BAUC;AAAA,kCACE,sBAAWL,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,sBAAWF,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,mBAAQG,YAAY,EAApB;AAAA,sBACGC,MAAM,GACHI,KAAK,CACJC,MADD,CACQV,IAAI,IAAI,CAACM,UAAD,IAAeN,IAAI,CAACL,KAAL,CAAWgB,QAAX,CAAoBL,UAApB,CAD/B,EAECM,GAFD,CAEK,CAACZ,IAAD,EAAOa,KAAP,kBACH,mBACMX,YAAY,CAAC;AACfY,gBAAAA,GAAG,EAAEd,IAAI,CAACL,KADK;AAEfkB,gBAAAA,KAFe;AAGfb,gBAAAA,IAHe;AAIfe,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,eAAe,EACbT,gBAAgB,KAAKM,KAArB,GAA6B,WAA7B,GAA2C,OAFxC;AAGLI,kBAAAA,UAAU,EAAET,YAAY,KAAKR,IAAjB,GAAwB,MAAxB,GAAiC;AAHxC;AAJQ,eAAD,CADlB;AAAA,wBAYGA,IAAI,CAACL;AAZR;AAAA;AAAA;AAAA;AAAA,oBAHF,CADG,GAmBH;AApBN;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA;AAJH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GA5DuBF,K;;KAAAA,K","sourcesContent":["import { useEffect, useContext } from \"react\"\nimport React from 'react'\nimport { Context } from \"../Context\"\nimport Select from 'react-select';\n\nexport default function Tests() {\n  const options = [\n    { value: 'name', label: 'name' },\n    { value: 'name', label: 'name' },\n    { value: 'vanilla', label: 'Vanilla' }\n\n\n  ]\n  const { setCurrentPage } = useContext(Context)\n  useEffect(() => setCurrentPage('/tests'), [])\n  return (\n    <div>\n\n      <Downshift\n        onChange={selection => alert(`You selected ${selection.value}`)}\n        itemToString={item => (item ? item.value : '')}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem,\n        }) => (\n          <div>\n            <label {...getLabelProps()}>Enter a fruit</label>\n            <input {...getInputProps()} />\n            <ul {...getMenuProps()}>\n              {isOpen\n                ? items\n                  .filter(item => !inputValue || item.value.includes(inputValue))\n                  .map((item, index) => (\n                    <li\n                      {...getItemProps({\n                        key: item.value,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor:\n                            highlightedIndex === index ? 'lightgray' : 'white',\n                          fontWeight: selectedItem === item ? 'bold' : 'normal',\n                        },\n                      })}\n                    >\n                      {item.value}\n                    </li>\n                  ))\n                : null}\n            </ul>\n          </div>\n        )}\n      </Downshift>,\n      document.getElementById('root'),\n      )\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}